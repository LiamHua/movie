<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.software.mapper.FilmMapper">

<!--    <resultMap id="FilmDetailBeanMap" type="FilmDetailBean">-->
<!--    <id property="id" column="id"/>-->
<!--    <result property="translated_term" column="translated_term"/>-->
<!--    <result property="name" column="name"/>-->
<!--    <result property="cover" column="cover"/>-->
<!--    <result property="decade" column="decade"/>-->
<!--    <result property="language" column="language"/>-->
<!--    <result property="subtitle" column="subtitle"/>-->
<!--    <result property="release_time" column="release_time"/>-->
<!--    <result property="douban" column="douban"/>-->
<!--    <result property="length" column="length"/>-->
<!--    <result property="info" column="info"/>-->
<!--    <result property="link" column="link"/>-->
<!--    <result property="upload_time" column="upload_time"/>-->
<!--    <result property="hot" column="hot"/>-->
<!--    <result property="collect" column="collect"/>-->
<!--    &lt;!&ndash;        地区&ndash;&gt;-->
<!--    <result property="areas" column="areas"/>-->
<!--    &lt;!&ndash;        目录&ndash;&gt;-->
<!--    <result property="category" column="category"/>-->
<!--&lt;!&ndash;        标签&ndash;&gt;-->
<!--        <result property="tags" column="tags"/>-->

<!--        &lt;!&ndash;        编剧&ndash;&gt;-->
<!--    <collection property="scriptwriterList" ofType="StarBean">-->
<!--        <id property="id" column="scriptwriter_id"/>-->
<!--        <result property="CN_name" column="scriptwriter_CN_name"/>-->
<!--        <result property="EN_name" column="scriptwriter_EN_name"/>-->
<!--    </collection>-->
<!--    &lt;!&ndash;        导演&ndash;&gt;-->
<!--    <collection property="directorList" ofType="StarBean">-->
<!--        <id property="id" column="director_id"/>-->
<!--        <result property="CN_name" column="director_CN_name"/>-->
<!--        <result property="EN_name" column="director_EN_name"/>-->
<!--    </collection>-->
<!--    &lt;!&ndash;        演员&ndash;&gt;-->
<!--    <collection property="starList" ofType="StarBean">-->
<!--        <id property="id" column="star_id"/>-->
<!--        <result property="CN_name" column="star_CN_name"/>-->
<!--        <result property="EN_name" column="star_EN_name"/>-->
<!--    </collection>-->

<!--</resultMap>-->

    <select id="queryFilm" parameterType="map" resultType="team.software.bean.FilmBean">
        SELECT
            film.id,
            film.name,
            film.cover,
            film.douban,
            (   SELECT
                    GROUP_CONCAT(star.CN_name)
                FROM
                    film_star
                LEFT JOIN star ON film_star.star_id = star.id
                WHERE
                    film_star.film_id = film.id
            ) as casts,
            (	SELECT
                    GROUP_CONCAT(star.CN_name)
                FROM
                    film_director
                LEFT JOIN star ON film_director.star_id=star.id
                WHERE
                film_director.film_id = film.id
            ) as directors
        FROM
            film
            LEFT JOIN film_category ON film_category.film_id = film.id
            LEFT JOIN film_area ON film_area.film_id = film.id
            LEFT JOIN film_tag ON film_tag.film_id = film.id
            LEFT JOIN film_director ON film_director.film_id = film.id
        WHERE
            1 = 1
            <if test="genres != null and genres.isEmpty()">
                AND film_category.category_id IN
                <foreach collection="genres" open="(" close=")" index="index" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="areas != null and areas.isEmpty()">
                AND film_area.area_id IN
                <foreach collection="areas" open="(" close=")" index="index" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="tags != null and tags.isEmpty()">
                AND film_tag.tag_id IN
                <foreach collection="tags" open="(" close=")" index="index" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="decade != null and decade != ''">
                AND
                <choose>
                    <when test="decade == '2021'">
                        film.decade = '2021'
                    </when>
                    <when test="decade == '2020'">
                        film.decade = '2020'
                    </when>
                    <when test="decade == '2019'">
                        film.decade = '2019'
                    </when>
                    <when test="decade == '2018'">
                        film.decade = '2018'
                    </when>
                    <when test="decade == '2010年代'">
                        film.decade <![CDATA[ >= ]]> '2010'
                        film.decade <![CDATA[ < ]]> '2020'
                    </when>
                    <when test="decade == '2000年代'">
                        film.decade <![CDATA[ >= ]]> '2000'
                        film.decade <![CDATA[ < ]]> '2010'
                    </when>
                    <when test="decade == '更早'">
                        film.decade <![CDATA[ < ]]> '2000'
                    </when>
                    <otherwise>
                         1 = 1
                    </otherwise>
                </choose>
            </if>
            GROUP BY film.id
            <if test="sort != null and sort != ''">
                ORDER BY
                <choose>
                    <when test="sort == 'hot'">
                        film.hot DESC
                    </when>
                    <when test="sort == 'douban'">
                        film.douban DESC
                    </when>
                    <when test="sort == 'collect'">
                        film.collect DESC
                    </when>
                    <when test="sort == 'release_time'">
                        film.release_time DESC
                    </when>
                    <otherwise>
                        1 = 1
                    </otherwise>
                </choose>
            </if>
    </select>


    <select id="queryFilmDetail" parameterType="map" resultType="team.software.bean.FilmDetailBean">
        SELECT
            film.id,
            film.translated_term,
            film.name,
            film.cover,
            film.decade,
            film.language,
            film.subtitle,
            film.release_time,
            film.douban,
            film.length,
            film.info,
            film.link,
            film.upload_time,
            film.hot,
            film.collect,
            (
                SELECT
                    GROUP_CONCAT( area.name )
                FROM
                    film_area
                        LEFT JOIN area ON area.id = film_area.area_id
                WHERE
                    film.id = film_area.film_id
            ) AS areas,
            (
                SELECT
                    GROUP_CONCAT( category.name)
                FROM
                    film_category
                        LEFT JOIN category ON category.id = film_category.category_id
                WHERE
                    film.id = film_category.film_id
            ) AS category,
            (
                SELECT
                    GROUP_CONCAT( tag.name )
                FROM
                    film_tag
                        LEFT JOIN tag ON tag.id = film_tag.tag_id
                WHERE
                    film.id = film_tag.film_id
            ) AS tags
        FROM
            film
                LEFT JOIN html ON html.id = film.html_id
        WHERE
            film.id = #{id}
          AND html.state = 1
    </select>

    <select id="queryFilmDirector" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_director
                LEFT JOIN star ON star.id = film_director.star_id
        WHERE
            film_director.film_id = #{id}
    </select>

    <select id="queryFilmScriptwriter" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_scriptwriter
                LEFT JOIN star ON star.id = film_scriptwriter.star_id
        WHERE
            film_scriptwriter.film_id = #{id}
    </select>

    <select id="queryFilmStar" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_star
                LEFT JOIN star ON star.id = film_star.star_id
        WHERE
            film_star.film_id = #{id}
    </select>

    <select id="queryHotFilm" parameterType="map" resultType="team.software.bean.FilmDetailBean">
        SELECT
            film.id,
            film.html_id,
            film.translated_term,
            film.`name`,
            film.cover,
            film.decade,
            film.`language`,
            film.subtitle,
            film.release_time,
            film.douban,
            film.length,
            film.info,
            film.link,
            film.upload_time,
            film.hot,
            film.collect
        FROM
            film
        ORDER BY
            film.hot DESC
    </select>
</mapper>
