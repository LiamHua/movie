<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.software.mapper.FilmMapper">

    <select id="queryGenres" resultType="team.software.bean.BaseBean">
        SELECT
            category.id,
            category.name
        FROM
            category
    </select>

    <select id="queryAreas" parameterType="list" resultType="team.software.bean.BaseBean">
        SELECT
        area.id,
        area.name
        FROM
        area
        WHERE
        area.name IN
        <foreach collection="list" open="(" separator="," close=")" index="index" item="item">
            #{item}
        </foreach>
    </select>


    <select id="queryFilm" parameterType="map" resultType="team.software.bean.FilmBean">
        SELECT
        film.name,
        film.id,
        film.cover,
        film.douban,
        (   SELECT
        GROUP_CONCAT(star.CN_name)
        FROM
        film_star
        LEFT JOIN star ON film_star.star_id = star.id
        WHERE
        film_star.film_id = film.id
        ) as casts,
        (	SELECT
        GROUP_CONCAT(star.CN_name)
        FROM
        film_director
        LEFT JOIN star ON film_director.star_id=star.id
        WHERE
        film_director.film_id = film.id
        ) as directors
        FROM
        film
        LEFT JOIN film_category ON film_category.film_id = film.id
        LEFT JOIN film_area ON film_area.film_id = film.id
        LEFT JOIN film_tag ON film_tag.film_id = film.id
        LEFT JOIN film_director ON film_director.film_id = film.id
        LEFT JOIN html ON html.id = film.html_id
        WHERE
        1 = 1
        AND html.state = 1
        <if test="keyword != null and !keyword != ''">
            AND film.name LIKE CONCAT("%",#{keyword},"%") OR film.translated_term LIKE CONCAT("%",#{keyword},"%")
        </if>
        <if test="genres != null and !genres.isEmpty()">
            AND film_category.category_id IN
            <foreach collection="genres" open="(" close=")" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="areas != null and !areas.isEmpty()">
            AND film_area.area_id IN
            <foreach collection="areas" open="(" close=")" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="tags != null and !tags.isEmpty()">
            AND film_tag.tag_id IN
            <foreach collection="tags" open="(" close=")" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="decade != null and decade != ''">
            AND
            <choose>
                <when test="decade == '2021'">
                    film.decade = '2021'
                </when>
                <when test="decade == '2020'">
                    film.decade = '2020'
                </when>
                <when test="decade == '2019'">
                    film.decade = '2019'
                </when>
                <when test="decade == '2018'">
                    film.decade = '2018'
                </when>
                <when test="decade == '2010年代'">
                    film.decade <![CDATA[ >= ]]> 2010
                    AND film.decade <![CDATA[ < ]]> 2020
                </when>
                <when test="decade == '2000年代'">
                    film.decade <![CDATA[ >= ]]> 2000
                    AND film.decade <![CDATA[ < ]]> 2010
                </when>
                <when test="decade == '更早'">
                    film.decade <![CDATA[ < ]]> 2000
                </when>
                <otherwise>
                    1 = 1
                </otherwise>
            </choose>
        </if>
        GROUP BY film.id
        <choose>
            <when test="sort != null and sort != ''">
                ORDER BY
                <choose>
                    <when test="sort == 'hot'">
                        film.hot DESC
                    </when>
                    <when test="sort == 'douban'">
                        film.douban DESC
                    </when>
                    <when test="sort == 'collect'">
                        film.collect DESC
                    </when>
                    <when test="sort == 'releaseDate'">
                        film.release_time DESC
                    </when>
                    <otherwise>
                        1 = 1
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                ORDER BY film.hot DESC
            </otherwise>
        </choose>
    </select>


    <select id="queryFilmDetail" parameterType="map" resultType="team.software.bean.FilmDetailBean">
        SELECT
            film.id,
            film.translated_term,
            film.name,
            film.cover,
            film.decade,
            film.language,
            film.subtitle,
            film.release_time,
            film.douban,
            film.length,
            film.info,
            film.link,
            film.upload_time,
            film.hot,
            film.collect,
            (
                SELECT
                    GROUP_CONCAT( area.name )
                FROM
                    film_area
                        LEFT JOIN area ON area.id = film_area.area_id
                WHERE
                    film.id = film_area.film_id
            ) AS areas,
            (
                SELECT
                    GROUP_CONCAT( category.name)
                FROM
                    film_category
                        LEFT JOIN category ON category.id = film_category.category_id
                WHERE
                    film.id = film_category.film_id
            ) AS category,
            (
                SELECT
                    GROUP_CONCAT( tag.name )
                FROM
                    film_tag
                        LEFT JOIN tag ON tag.id = film_tag.tag_id
                WHERE
                    film.id = film_tag.film_id
            ) AS tags
        FROM
            film
                LEFT JOIN html ON html.id = film.html_id
        WHERE
            film.id = #{id}
          AND html.state = 1
    </select>

    <select id="queryFilmDirector" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_director
                LEFT JOIN star ON star.id = film_director.star_id
        WHERE
            film_director.film_id = #{id}
    </select>

    <select id="queryFilmScriptwriter" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_scriptwriter
                LEFT JOIN star ON star.id = film_scriptwriter.star_id
        WHERE
            film_scriptwriter.film_id = #{id}
    </select>

    <select id="queryFilmStar" parameterType="string" resultType="team.software.bean.StarBean">
        SELECT
            star.id,
            star.CN_name,
            star.EN_name
        FROM
            film_star
                LEFT JOIN star ON star.id = film_star.star_id
        WHERE
            film_star.film_id = #{id}
    </select>

    <select id="queryFilmAward" parameterType="string" resultType="team.software.bean.AwardBean">
        SELECT
            award.id AS award_id,
            award.`name` AS award_name,
            film_award.award_content  AS award_content
        FROM
            film_award
                LEFT JOIN award ON award.id = film_award.award_id
        WHERE
            film_award.film_id = #{id}
    </select>

    <update id="updateFilmHot" parameterType="string" >
        UPDATE film
        SET film.hot = film.hot + 1
        WHERE
            film.id =#{id}
    </update>
</mapper>
